set(CMAKE_MESSAGE_INDENT "[gRPC] ")

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY COMPILE_DEFINITIONS)
set_property(DIRECTORY PROPERTY COMPILE_DEFINITIONS "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY COMPILE_OPTIONS)
set_property(DIRECTORY PROPERTY COMPILE_OPTIONS "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY INCLUDE_DIRECTORIES)
set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY LINK_DIRECTORIES)
set_property(DIRECTORY PROPERTY LINK_DIRECTORIES "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY LINK_OPTIONS)
set_property(DIRECTORY PROPERTY LINK_OPTIONS "${_prop}")
unset(_prop)
unset(grpc_BINARY_DIR)
unset(grpc_SOURCE_DIR)

project("gRPC")
execute_process(
  COMMAND ${Python3_EXECUTABLE} "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore/tools/cmake/run_bazel_to_cmake.py"
        --load-workspace "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore/build/bazel_workspace_info.pickle"
        --cmake-project-name gRPC
        --cmake-binary-dir "${CMAKE_CURRENT_BINARY_DIR}"
        --bazel-repo-name com_github_grpc_grpc
        --build-rules-output "${CMAKE_CURRENT_BINARY_DIR}/build_rules.cmake"
        --repo-mapping "@upb" "@com_google_protobuf"
        --repo-mapping "@com_googlesource_code_re2" "@com_google_re2"
        --repo-mapping "@com_github_google_benchmark" "@com_google_benchmark"
        --repo-mapping "@io_bazel_rules_go" "@local_proto_mirror"
        --repo-mapping "@com_github_cncf_xds" "@com_github_cncf_udpa"
        --repo-mapping "@zlib" "@net_zlib"
        --repo-mapping "@boringssl" "@com_google_boringssl"
        "--exclude-package=src/android/**"
        "--exclude-package=src/csharp/**"
        "--exclude-package=src/objective-c/**"
        "--exclude-package=src/php/**"
        "--exclude-package=src/ruby/**"
        "--exclude-package=src/python/**"
        "--exclude-package=src/proto/grpc/testing/**"
        "--exclude-package=test/**"
        "--exclude-package=third_party/android/**"
        "--exclude-package=third_party/objective_c/**"
        "--exclude-package=third_party/py/**"
        "--exclude-package=third_party/toolchains/**"
        "--exclude-package=third_party/upb/**"
        "--exclude-package=tools/**"
        "--exclude-package=examples/**"
        "--exclude-package=fuzztest/**"
        "--exclude-package=src/core/ext/transport/binder/java/**"
        --ignore-library=//bazel:objc_grpc_library.bzl
        --ignore-library=//bazel:cython_library.bzl
        --ignore-library=//bazel:python_rules.bzl
        --ignore-library=//bazel:generate_objc.bzl
        --ignore-library=//bazel:python_rules.bzl
        --ignore-library=@rules_fuzzing//fuzzing:cc_defs.bzl
        --exclude-target=//:grpc_cel_engine
        --target=//:grpc
        --target=//:grpc++
        --target=//:grpc++_codegen_proto
        --target=//:grpc++_public_hdrs
        --target=//:grpc++_test
        --target=//src/compiler:grpc_cpp_plugin
        --bind=cares=@com_github_cares_cares//:ares
        --bind=grpc++_codegen_proto=@com_github_grpc_grpc//:grpc++_codegen_proto
        --bind=grpc_cpp_plugin=@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin
        --bind=protobuf=@com_google_protobuf//:protobuf
        --bind=protobuf_clib=@com_google_protobuf//:protoc_lib
        --bind=protobuf_headers=@com_google_protobuf//:protobuf
        --bind=protocol_compiler=@com_google_protobuf//:protoc
        --bind=upb_json_lib=@com_google_protobuf//upb:json
        --bind=upb_lib=@com_google_protobuf//upb:upb
        --bind=upb_lib_descriptor=@com_google_protobuf//upb:cmake_descriptor_upb
        --bind=upb_lib_descriptor_reflection=@com_google_protobuf//upb:cmake_descriptor_upbdefs
        --bind=upb_reflection=@com_google_protobuf//upb:reflection
        --bind=upb_textformat_lib=@com_google_protobuf//upb:text
        --bind=upb_collections_lib=@com_google_protobuf//upb:collections
        --bind=upb_base_lib=@com_google_protobuf//upb:base
        --bind=upb_mem_lib=@com_google_protobuf//upb:mem
        --bind=upb_message_lib=@com_google_protobuf//upb:message
        --bind=benchmark=@com_google_benchmark//:benchmark
        --bind=gtest=@com_google_googletest//:gtest
        --bind=libcrypto=@com_google_boringssl//:crypto
        --bind=libssl=@com_google_boringssl//:ssl
        --bind=libuv=@com_github_libuv_libuv//:libuv
        --bind=libuv_test=@com_github_libuv_libuv//:libuv_test
        --bind=madler_zlib=@net_zlib//:zlib
        --bind=re2=@com_google_re2//:re2
        --bind=//third_party:cares=@com_github_cares_cares//:ares
        --bind=//third_party:grpc++_codegen_proto=@com_github_grpc_grpc//:grpc++_codegen_proto
        --bind=//third_party:grpc_cpp_plugin=@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin
        --bind=//third_party:protobuf=@com_google_protobuf//:protobuf
        --bind=//third_party:protobuf_clib=@com_google_protobuf//:protoc_lib
        --bind=//third_party:protobuf_headers=@com_google_protobuf//:protobuf
        --bind=//third_party:protocol_compiler=@com_google_protobuf//:protoc
        --bind=//third_party:upb_json_lib=@com_google_protobuf//upb:json
        --bind=//third_party:upb_lib=@com_google_protobuf//upb:upb
        --bind=//third_party:upb_lib_descriptor=@com_google_protobuf//upb:cmake_descriptor_upb
        --bind=//third_party:upb_lib_descriptor_reflection=@com_google_protobuf//upb:cmake_descriptor_upbdefs
        --bind=//third_party:upb_reflection=@com_google_protobuf//upb:reflection
        --bind=//third_party:upb_textformat_lib=@com_google_protobuf//upb:text
        --bind=//third_party:upb_collections_lib=@com_google_protobuf//upb:collections
        --bind=//third_party:upb_base_lib=@com_google_protobuf//upb:base
        --bind=//third_party:upb_mem_lib=@com_google_protobuf//upb:mem
        --bind=//third_party:upb_message_lib=@com_google_protobuf//upb:message
        --bind=//third_party:benchmark=@com_google_benchmark//:benchmark
        --bind=//third_party:gtest=@com_google_googletest//:gtest
        --bind=//third_party:libcrypto=@com_google_boringssl//:crypto
        --bind=//third_party:libssl=@com_google_boringssl//:ssl
        --bind=//third_party:libuv=@com_github_libuv_libuv//:libuv
        --bind=//third_party:libuv_test=@com_github_libuv_libuv//:libuv_test
        --bind=//third_party:madler_zlib=@net_zlib//:zlib
        --bind=//third_party:re2=@com_google_re2//:re2
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  COMMAND_ERROR_IS_FATAL ANY)
include("${CMAKE_CURRENT_BINARY_DIR}/build_rules.cmake")
