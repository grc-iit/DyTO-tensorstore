set(CMAKE_MESSAGE_INDENT "[udpa] ")

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY COMPILE_DEFINITIONS)
set_property(DIRECTORY PROPERTY COMPILE_DEFINITIONS "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY COMPILE_OPTIONS)
set_property(DIRECTORY PROPERTY COMPILE_OPTIONS "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY INCLUDE_DIRECTORIES)
set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY LINK_DIRECTORIES)
set_property(DIRECTORY PROPERTY LINK_DIRECTORIES "${_prop}")
unset(_prop)

get_property(_prop DIRECTORY "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore" PROPERTY LINK_OPTIONS)
set_property(DIRECTORY PROPERTY LINK_OPTIONS "${_prop}")
unset(_prop)
unset(udpa_BINARY_DIR)
unset(udpa_SOURCE_DIR)

project("udpa")
execute_process(
  COMMAND ${Python3_EXECUTABLE} "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore/tools/cmake/run_bazel_to_cmake.py"
        --extra-build=extraBUILD.bazel
        --load-workspace "/home/yejie/SCS_lab/DyTO/DyTO/tensorstore/build/bazel_workspace_info.pickle"
        --cmake-project-name udpa
        --cmake-binary-dir "${CMAKE_CURRENT_BINARY_DIR}"
        --bazel-repo-name com_github_cncf_udpa
        --build-rules-output "${CMAKE_CURRENT_BINARY_DIR}/build_rules.cmake"
        --repo-mapping "@io_bazel_rules_go" "@local_proto_mirror"
        --repo-mapping "@com_envoyproxy_protoc_gen_validate" "@local_proto_mirror"
        --repo-mapping "@dev_cel" "@cel-spec"
        --bind=@com_github_cncf_udpa//bazel:api_build_system.bzl=@tensorstore//bazel:proxy_xds_build_system.bzl
        --target=//udpa/annotations:pkg
        --target=//xds/data/orca/v3:pkg
        --target=//xds/service/orca/v3:pkg
        --target=//xds/type/v3:pkg
        --target=//xds/type/matcher/v3:pkg
        --target=//xds/core/v3:pkg
        --target=//udpa/annotations:pkg_cc_proto
        --target=//xds/data/orca/v3:pkg_cc_proto
        --target=//xds/service/orca/v3:pkg_cc_proto
        --target=//xds/type/v3:pkg_cc_proto
        --target=//xds/type/matcher/v3:pkg_cc_proto
        --target=//xds/core/v3:pkg_cc_proto
        --target=//udpa/annotations:pkg__upb_library
        --target=//xds/data/orca/v3:pkg__upb_library
        --target=//xds/service/orca/v3:pkg__upb_library
        --target=//xds/type/v3:pkg__upb_library
        --target=//xds/type/matcher/v3:pkg__upb_library
        --target=//xds/core/v3:pkg__upb_library
        --target=//udpa/annotations:pkg__upbdefs_library
        --target=//xds/data/orca/v3:pkg__upbdefs_library
        --target=//xds/service/orca/v3:pkg__upbdefs_library
        --target=//xds/type/v3:pkg__upbdefs_library
        --target=//xds/type/matcher/v3:pkg__upbdefs_library
        --target=//xds/core/v3:pkg__upbdefs_library
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  COMMAND_ERROR_IS_FATAL ANY)
include("${CMAKE_CURRENT_BINARY_DIR}/build_rules.cmake")
